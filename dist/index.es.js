import{useState as t,useEffect as e,useRef as n}from"react";function r(e){const[n,r]=t(e),[o,i]=t(void 0);return[n,o,function(t){i(n),r(t)}]}function o(n,r){const[o,i]=t(function(t,e){const n=localStorage.getItem(t);if(n){try{const t=JSON.parse(n);if(t)return t}catch(t){}return n}return e}(n,r));return e((()=>{localStorage.setItem(n,o)}),[o]),[o,i]}function i(n,r){const[o,i]=t(function(t,e){const n=localStorage.getItem(t);if(n){try{const t=JSON.parse(n);if(t)return t}catch(t){}return n}return e}(n,r)),c=new Event("storage");return e((()=>{window.addEventListener("storage",(()=>{const t=localStorage.getItem(n);if(t){try{const e=JSON.parse(t);if(e!=o)return void i(e)}catch(t){}if(t!=o)return void i(t)}return r}))}),[]),e((()=>{localStorage.setItem(n,o),window.dispatchEvent(c)}),[o]),[o,i]}function c(t,n,r){e((()=>{const e=setTimeout((()=>{t()}),r);return()=>{clearTimeout(e)}}),[...n])}function u(r,o,i){const[c,u]=t(!1);let a=n(null);const s=()=>{var t;a.current?(null===(t=a.current)||void 0===t||t.call(a),a.current=null,setTimeout(s,i)):u(!1)};e((()=>{c?a.current=r:(u(!0),r(),setTimeout(s,i))}),[...o])}function a(){return function(t){navigator.clipboard.writeText(t)}}function s(n){const[r,o]=t([window.innerWidth,window.innerHeight]),[i,c]=t("");return e((()=>(window.addEventListener("resize",(t=>{o([window.innerWidth,window.innerHeight])})),()=>{window.removeEventListener("resize",(t=>{}))})),[]),u((()=>{const t=null==n?void 0:n.sort(((t,e)=>{let n=0,r=0;return Object.keys(t).forEach((t=>n++)),Object.keys(e).forEach((t=>r++)),r-n}));null==t||t.forEach((t=>{let e=t.name;delete t.name;for(const n of Object.keys(t)){switch(n){case"maxWidth":if(r[0]>t[n])return;break;case"minWidth":if(r[0]<t[n])return;break;case"maxHeight":if(r[1]>t[n])return;break;case"minHeight":if(r[1]<t[n])return}c(e)}}))}),[r],100),{width:r[0],height:r[1],screen:i}}export{a as useClipboard,c as useDebounce,i as useLocalStorage,o as usePersistentState,r as usePrevState,s as useScreen,u as useThrottle};
