import{useState as t,useEffect as n,useRef as e}from"react";function r(n){const[e,r]=t(n),[o,i]=t(void 0);return[e,o,function(t){i(e),r(t)}]}function o(e,r){const[o,i]=t(function(t,n){const e=localStorage.getItem(t);if(e){try{const t=JSON.parse(e);if(t)return t}catch(t){}return e}return n}(e,r));return n((()=>{localStorage.setItem(e,o)}),[o]),[o,i]}function i(e,r){const[o,i]=t(function(t,n){const e=localStorage.getItem(t);if(e){try{const t=JSON.parse(e);if(t)return t}catch(t){}return e}return n}(e,r)),c=new Event("storage");return n((()=>{window.addEventListener("storage",(()=>{const t=localStorage.getItem(e);if(t){try{const n=JSON.parse(t);if(n!=o)return void i(n)}catch(t){}if(t!=o)return void i(t)}return r}))}),[]),n((()=>{localStorage.setItem(e,o),window.dispatchEvent(c)}),[o]),[o,i]}function c(t,e,r){n((()=>{const n=setTimeout((()=>{t()}),r);return()=>{clearTimeout(n)}}),[...e])}function u(r,o,i){const[c,u]=t(!1);let a=e(null);const s=()=>{var t;a.current?(null===(t=a.current)||void 0===t||t.call(a),a.current=null,setTimeout(s,i)):u(!1)};n((()=>{c?a.current=r:(u(!0),r(),setTimeout(s,i))}),[...o])}function a(){return function(t){navigator.clipboard.writeText(t)}}function s(e){const[r,o]=t([window.innerWidth,window.innerHeight]),[i,c]=t("");return n((()=>(window.addEventListener("resize",(t=>{o([window.innerWidth,window.innerHeight])})),()=>{window.removeEventListener("resize",(t=>{}))})),[]),u((()=>{const t=null==e?void 0:e.sort(((t,n)=>{let e=0,r=0;return Object.keys(t).forEach((t=>e++)),Object.keys(n).forEach((t=>r++)),r-e}));null==t||t.forEach((t=>{let n=t.name;delete t.name;for(const e of Object.keys(t)){switch(e){case"maxWidth":if(r[0]>t[e])return;break;case"minWidth":if(r[0]<t[e])return;break;case"maxHeight":if(r[1]>t[e])return;break;case"minHeight":if(r[1]<t[e])return}c(n)}}))}),[r],100),{width:r[0],height:r[1],screen:i}}function f(t,r){const o=e(!0);n((()=>{o.current&&(t(),o.current=!1)}),[...r])}function l(t,r){const o=e(!0);n((()=>{o.current?o.current=!1:t()}),[...r])}function d(e,r){const[o,i]=t(!0),[c,u]=t(),[a,s]=t(void 0);return n((()=>{(async()=>{try{const t=await fetch(e,r);if(!t.ok)throw new Error(t.status.toString());const n=await t.json();s(n)}catch(t){u(t)}i(!1)})()}),[]),{loading:o,error:c,data:a}}export{a as useClipboard,c as useDebounce,d as useFetch,f as useInitialRender,i as useLocalStorage,l as useNoInitialRender,o as usePersistentState,r as usePrevState,s as useScreen,u as useThrottle};
