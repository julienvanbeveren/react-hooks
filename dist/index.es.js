import{useState as t,useEffect as n,useRef as r}from"react";function e(n){const[r,e]=t(n),[o,c]=t(void 0);return[r,o,function(t){c(r),e(t)}]}function o(r,e){const[o,c]=t(function(t,n){const r=localStorage.getItem(t);if(r){try{const t=JSON.parse(r);if(t)return t}catch(t){}return r}return n}(r,e));return n((()=>{localStorage.setItem(r,o)}),[o]),[o,c]}function c(r,e){const[o,c]=t(function(t,n){const r=localStorage.getItem(t);if(r){try{const t=JSON.parse(r);if(t)return t}catch(t){}return r}return n}(r,e)),u=new Event("storage");return n((()=>{window.addEventListener("storage",(()=>{const t=localStorage.getItem(r);if(t){try{const n=JSON.parse(t);if(n!=o)return void c(n)}catch(t){}if(t!=o)return void c(t)}return e}))}),[]),n((()=>{localStorage.setItem(r,o),window.dispatchEvent(u)}),[o]),[o,c]}function u(t,r,e){n((()=>{const n=setTimeout((()=>{t()}),e);return()=>{clearTimeout(n)}}),[...r])}function i(e,o,c){const[u,i]=t(!1);let a=r(null);const s=()=>{var t;a.current?(null===(t=a.current)||void 0===t||t.call(a),a.current=null,setTimeout(s,c)):i(!1)};n((()=>{u?a.current=e:(i(!0),e(),setTimeout(s,c))}),[...o])}function a(){return function(t){navigator.clipboard.writeText(t)}}export{a as useClipboard,u as useDebounce,c as useLocalStorage,o as usePersistentState,e as usePrevState,i as useThrottle};
